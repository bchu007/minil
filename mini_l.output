Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 ident: IDENT

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 statements: %empty
    9           | statement SEMICOLON statements

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 declaration: identifiers COLON INTEGER
   13            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   14 vars: var
   15     | var COMMA vars

   16 bool_expr: relation_and_expr
   17          | relation_and_expr OR bool_expr

   18 statement: var ASSIGN expression
   19          | IF bool_expr THEN statements ELSE statements ENDIF
   20          | IF bool_expr THEN statements ENDIF
   21          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   22          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   23          | FOREACH ident IN ident BEGINLOOP statements ENDLOOP
   24          | READ vars
   25          | WRITE vars
   26          | CONTINUE
   27          | RETURN expression

   28 relation_and_expr: relation_expr
   29                  | relation_expr AND relation_and_expr

   30 relation_expr: expression comp expression
   31              | NOT expression comp expression
   32              | TRUE
   33              | NOT TRUE
   34              | FALSE
   35              | NOT FALSE
   36              | L_PAREN bool_expr R_PAREN
   37              | NOT L_PAREN bool_expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: multiplicative_expr
   45           | multiplicative_expr ADD expression
   46           | multiplicative_expr SUB expression

   47 multiplicative_expr: term
   48                    | term MULT multiplicative_expr
   49                    | term DIV multiplicative_expr
   50                    | term MOD multiplicative_expr

   51 expressions: expression
   52            | expression COMMA expression

   53 term: var
   54     | NUMBER
   55     | L_PAREN expression R_PAREN
   56     | SUB var
   57     | SUB NUMBER
   58     | SUB L_PAREN expression R_PAREN
   59     | ident L_PAREN expressions R_PAREN

   60 var: ident
   61    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 13 54 57
IDENT (259) 5
FUNCTION (260) 4
BEGIN_PARAMS (261) 4
END_PARAMS (262) 4
BEGIN_LOCALS (263) 4
END_LOCALS (264) 4
BEGIN_BODY (265) 4
END_BODY (266) 4
INTEGER (267) 12 13
ARRAY (268) 13
OF (269) 13
IF (270) 19 20
THEN (271) 19 20
ENDIF (272) 19 20
ELSE (273) 19
WHILE (274) 21 22
DO (275) 22
FOREACH (276) 23
IN (277) 23
BEGINLOOP (278) 21 22 23
ENDLOOP (279) 21 22 23
CONTINUE (280) 26
READ (281) 24
WRITE (282) 25
AND (283) 29
OR (284) 17
NOT (285) 31 33 35 37
TRUE (286) 32 33
FALSE (287) 34 35
RETURN (288) 27
SUB (289) 46 56 57 58
ADD (290) 45
MULT (291) 48
DIV (292) 49
MOD (293) 50
EQ (294) 38
NEQ (295) 39
LT (296) 40
GT (297) 41
LTE (298) 42
GTE (299) 43
SEMICOLON (300) 4 7 9
COLON (301) 12 13
COMMA (302) 11 15 52
L_PAREN (303) 36 37 55 58 59
R_PAREN (304) 36 37 55 58 59
L_SQUARE_BRACKET (305) 13 61
R_SQUARE_BRACKET (306) 13 61
ASSIGN (307) 18


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
ident (57)
    on left: 5, on right: 4 10 11 23 59 60 61
declarations (58)
    on left: 6 7, on right: 4 7
statements (59)
    on left: 8 9, on right: 4 9 19 20 21 22 23
identifiers (60)
    on left: 10 11, on right: 11 12 13
declaration (61)
    on left: 12 13, on right: 7
vars (62)
    on left: 14 15, on right: 15 24 25
bool_expr (63)
    on left: 16 17, on right: 17 19 20 21 22 36 37
statement (64)
    on left: 18 19 20 21 22 23 24 25 26 27, on right: 9
relation_and_expr (65)
    on left: 28 29, on right: 16 17 29
relation_expr (66)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (67)
    on left: 38 39 40 41 42 43, on right: 30 31
expression (68)
    on left: 44 45 46, on right: 18 27 30 31 45 46 51 52 55 58 61
multiplicative_expr (69)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
expressions (70)
    on left: 51 52, on right: 59
term (71)
    on left: 53 54 55 56 57 58 59, on right: 47 48 49 50
var (72)
    on left: 60 61, on right: 14 15 18 53 56


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    ident         go to state 11
    declarations  go to state 12
    identifiers   go to state 13
    declaration   go to state 14


State 11

   10 identifiers: ident .
   11            | ident . COMMA identifiers

    COMMA  shift, and go to state 15

    $default  reduce using rule 10 (identifiers)


State 12

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

   12 declaration: identifiers . COLON INTEGER
   13            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   11 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    ident        go to state 11
    identifiers  go to state 19


State 16

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

   12 declaration: identifiers COLON . INTEGER
   13            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    ident         go to state 11
    declarations  go to state 23
    identifiers   go to state 13
    declaration   go to state 14


State 19

   11 identifiers: ident COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


State 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    ident         go to state 11
    declarations  go to state 24
    identifiers   go to state 13
    declaration   go to state 14


State 21

   12 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 12 (declaration)


State 22

   13 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 24

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 39
    statement   go to state 40
    var         go to state 41


State 29

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

   19 statement: IF . bool_expr THEN statements ELSE statements ENDIF
   20          | IF . bool_expr THEN statements ENDIF

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    bool_expr            go to state 50
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 31

   21 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    bool_expr            go to state 57
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 32

   22 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 58


State 33

   23 statement: FOREACH . ident IN ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 59


State 34

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 35

   24 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 38
    vars   go to state 60
    var    go to state 61


State 36

   25 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 38
    vars   go to state 62
    var    go to state 61


State 37

   27 statement: RETURN . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 64
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 38

   60 var: ident .
   61    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 60 (var)


State 39

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 40

    9 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 41

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 42

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 43

   54 term: NUMBER .

    $default  reduce using rule 54 (term)


State 44

   31 relation_expr: NOT . expression comp expression
   33              | NOT . TRUE
   35              | NOT . FALSE
   37              | NOT . L_PAREN bool_expr R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    TRUE     shift, and go to state 70
    FALSE    shift, and go to state 71
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 72

    ident                go to state 49
    expression           go to state 73
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 45

   32 relation_expr: TRUE .

    $default  reduce using rule 32 (relation_expr)


State 46

   34 relation_expr: FALSE .

    $default  reduce using rule 34 (relation_expr)


State 47

   56 term: SUB . var
   57     | SUB . NUMBER
   58     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 74
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 75

    ident  go to state 38
    var    go to state 76


State 48

   36 relation_expr: L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    bool_expr            go to state 77
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 78
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 49

   59 term: ident . L_PAREN expressions R_PAREN
   60 var: ident .
   61    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 79
    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 60 (var)


State 50

   19 statement: IF bool_expr . THEN statements ELSE statements ENDIF
   20          | IF bool_expr . THEN statements ENDIF

    THEN  shift, and go to state 80


State 51

   16 bool_expr: relation_and_expr .
   17          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 81

    $default  reduce using rule 16 (bool_expr)


State 52

   28 relation_and_expr: relation_expr .
   29                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 82

    $default  reduce using rule 28 (relation_and_expr)


State 53

   30 relation_expr: expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 54

   44 expression: multiplicative_expr .
   45           | multiplicative_expr . ADD expression
   46           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 90
    ADD  shift, and go to state 91

    $default  reduce using rule 44 (expression)


State 55

   47 multiplicative_expr: term .
   48                    | term . MULT multiplicative_expr
   49                    | term . DIV multiplicative_expr
   50                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 47 (multiplicative_expr)


State 56

   53 term: var .

    $default  reduce using rule 53 (term)


State 57

   21 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 95


State 58

   22 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 96
    statement   go to state 40
    var         go to state 41


State 59

   23 statement: FOREACH ident . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 97


State 60

   24 statement: READ vars .

    $default  reduce using rule 24 (statement)


State 61

   14 vars: var .
   15     | var . COMMA vars

    COMMA  shift, and go to state 98

    $default  reduce using rule 14 (vars)


State 62

   25 statement: WRITE vars .

    $default  reduce using rule 25 (statement)


State 63

   55 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 99
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 64

   27 statement: RETURN expression .

    $default  reduce using rule 27 (statement)


State 65

   61 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 100
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 66

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 67

    9 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 101
    statement   go to state 40
    var         go to state 41


State 68

   18 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 102
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 69

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (declaration)


State 70

   33 relation_expr: NOT TRUE .

    $default  reduce using rule 33 (relation_expr)


State 71

   35 relation_expr: NOT FALSE .

    $default  reduce using rule 35 (relation_expr)


State 72

   37 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    bool_expr            go to state 103
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 78
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 73

   31 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 104


State 74

   57 term: SUB NUMBER .

    $default  reduce using rule 57 (term)


State 75

   58 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 105
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 76

   56 term: SUB var .

    $default  reduce using rule 56 (term)


State 77

   36 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 106


State 78

   30 relation_expr: expression . comp expression
   55 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 107

    comp  go to state 89


State 79

   59 term: ident L_PAREN . expressions R_PAREN

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 108
    multiplicative_expr  go to state 54
    expressions          go to state 109
    term                 go to state 55
    var                  go to state 56


State 80

   19 statement: IF bool_expr THEN . statements ELSE statements ENDIF
   20          | IF bool_expr THEN . statements ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 110
    statement   go to state 40
    var         go to state 41


State 81

   17 bool_expr: relation_and_expr OR . bool_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    bool_expr            go to state 111
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 82

   29 relation_and_expr: relation_expr AND . relation_and_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    relation_and_expr    go to state 112
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 83

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 84

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 85

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 86

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 87

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 88

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 89

   30 relation_expr: expression comp . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 113
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 90

   46 expression: multiplicative_expr SUB . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 114
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 91

   45 expression: multiplicative_expr ADD . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 115
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 92

   48 multiplicative_expr: term MULT . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    multiplicative_expr  go to state 116
    term                 go to state 55
    var                  go to state 56


State 93

   49 multiplicative_expr: term DIV . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    multiplicative_expr  go to state 117
    term                 go to state 55
    var                  go to state 56


State 94

   50 multiplicative_expr: term MOD . multiplicative_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    multiplicative_expr  go to state 118
    term                 go to state 55
    var                  go to state 56


State 95

   21 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 119
    statement   go to state 40
    var         go to state 41


State 96

   22 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 120


State 97

   23 statement: FOREACH ident IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 121


State 98

   15 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 38
    vars   go to state 122
    var    go to state 61


State 99

   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 100

   61 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 101

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


State 102

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 103

   37 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 124


State 104

   31 relation_expr: NOT expression comp . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 125
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 105

   58 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 126


State 106

   36 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 36 (relation_expr)


State 107

   55 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


State 108

   51 expressions: expression .
   52            | expression . COMMA expression

    COMMA  shift, and go to state 127

    $default  reduce using rule 51 (expressions)


State 109

   59 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 128


State 110

   19 statement: IF bool_expr THEN statements . ELSE statements ENDIF
   20          | IF bool_expr THEN statements . ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 111

   17 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 17 (bool_expr)


State 112

   29 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 29 (relation_and_expr)


State 113

   30 relation_expr: expression comp expression .

    $default  reduce using rule 30 (relation_expr)


State 114

   46 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 46 (expression)


State 115

   45 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 45 (expression)


State 116

   48 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 48 (multiplicative_expr)


State 117

   49 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 118

   50 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 50 (multiplicative_expr)


State 119

   21 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 120

   22 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 132


State 121

   23 statement: FOREACH ident IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 133


State 122

   15 vars: var COMMA vars .

    $default  reduce using rule 15 (vars)


State 123

   61 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 61 (var)


State 124

   37 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


State 125

   31 relation_expr: NOT expression comp expression .

    $default  reduce using rule 31 (relation_expr)


State 126

   58 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 127

   52 expressions: expression COMMA . expression

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 63

    ident                go to state 49
    expression           go to state 134
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 128

   59 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 59 (term)


State 129

   20 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 20 (statement)


State 130

   19 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 135
    statement   go to state 40
    var         go to state 41


State 131

   21 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 132

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 5
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    ident                go to state 49
    bool_expr            go to state 136
    relation_and_expr    go to state 51
    relation_expr        go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 133

   23 statement: FOREACH ident IN ident BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOREACH   shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 8 (statements)

    ident       go to state 38
    statements  go to state 137
    statement   go to state 40
    var         go to state 41


State 134

   52 expressions: expression COMMA expression .

    $default  reduce using rule 52 (expressions)


State 135

   19 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 138


State 136

   22 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 22 (statement)


State 137

   23 statement: FOREACH ident IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 138

   19 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 19 (statement)


State 139

   23 statement: FOREACH ident IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 23 (statement)
