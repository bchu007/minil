Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 funchead: FUNCTION ident SEMICOLON

    5 params_end: END_PARAMS

    6 params_start: BEGIN_PARAMS

    7 function: funchead params_start declarations params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    8 ident: IDENT

    9 identifiers: ident
   10            | ident COMMA identifiers

   11 declaration: identifiers COLON INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   13 declarations: %empty
   14             | declaration SEMICOLON declarations

   15 vars: var
   16     | var COMMA vars

   17 statements: %empty
   18           | statement SEMICOLON statements

   19 statement: var ASSIGN expression
   20          | IF bool_expr THEN statements ELSE statements ENDIF
   21          | IF bool_expr THEN statements ENDIF
   22          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   23          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   24          | FOREACH ident IN ident BEGINLOOP statements ENDLOOP
   25          | READ vars
   26          | WRITE vars
   27          | CONTINUE
   28          | RETURN expression

   29 relation_expr: relation_expr_param
   30              | NOT relation_expr_param

   31 relation_expr_param: relation_expr_not
   32                    | L_PAREN relation_expr_not R_PAREN

   33 relation_expr_not: expression comp expression
   34                  | TRUE
   35                  | FALSE

   36 relation_and_expr_next: %empty
   37                       | AND relation_and_expr

   38 relation_and_expr: relation_expr relation_and_expr_next

   39 bool_expr_next: %empty
   40               | OR bool_expr

   41 bool_expr: relation_and_expr bool_expr_next

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 multiplicative_expr: term
   49                    | term MULT multiplicative_expr
   50                    | term DIV multiplicative_expr
   51                    | term MOD multiplicative_expr

   52 expression: multiplicative_expr
   53           | multiplicative_expr ADD expression
   54           | multiplicative_expr SUB expression

   55 expressions: expression
   56            | expression COMMA expressions

   57 term: var
   58     | NUMBER
   59     | L_PAREN expression R_PAREN
   60     | SUB NUMBER
   61     | SUB L_PAREN expression R_PAREN
   62     | ident L_PAREN expressions R_PAREN

   63 var: ident
   64    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 12 58 60
IDENT (259) 8
FUNCTION (260) 4
BEGIN_PARAMS (261) 6
END_PARAMS (262) 5
BEGIN_LOCALS (263) 7
END_LOCALS (264) 7
BEGIN_BODY (265) 7
END_BODY (266) 7
INTEGER (267) 11 12
ARRAY (268) 12
OF (269) 12
IF (270) 20 21
THEN (271) 20 21
ENDIF (272) 20 21
ELSE (273) 20
WHILE (274) 22 23
DO (275) 23
FOREACH (276) 24
IN (277) 24
BEGINLOOP (278) 22 23 24
ENDLOOP (279) 22 23 24
CONTINUE (280) 27
READ (281) 25
WRITE (282) 26
TRUE (283) 34
FALSE (284) 35
SEMICOLON (285) 4 14 18
COLON (286) 11 12
COMMA (287) 10 16 56
L_PAREN (288) 32 59 61 62
R_PAREN (289) 32 59 61 62
L_SQUARE_BRACKET (290) 12 64
R_SQUARE_BRACKET (291) 12 64
RETURN (292) 28
SUB (293) 54 60 61
ADD (294) 53
MULT (295) 49
DIV (296) 50
MOD (297) 51
EQ (298) 42
NEQ (299) 43
LT (300) 44
GT (301) 45
LTE (302) 46
GTE (303) 47
NOT (304) 30
AND (305) 37
OR (306) 40
ASSIGN (307) 19


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
funchead (56)
    on left: 4, on right: 7
params_end (57)
    on left: 5, on right: 7
params_start (58)
    on left: 6, on right: 7
function (59)
    on left: 7, on right: 3
ident (60)
    on left: 8, on right: 4 9 10 24 62 63 64
identifiers (61)
    on left: 9 10, on right: 10 11 12
declaration (62)
    on left: 11 12, on right: 14
declarations (63)
    on left: 13 14, on right: 7 14
vars (64)
    on left: 15 16, on right: 16 25 26
statements (65)
    on left: 17 18, on right: 7 18 20 21 22 23 24
statement (66)
    on left: 19 20 21 22 23 24 25 26 27 28, on right: 18
relation_expr (67)
    on left: 29 30, on right: 38
relation_expr_param (68)
    on left: 31 32, on right: 29 30
relation_expr_not (69)
    on left: 33 34 35, on right: 31 32
relation_and_expr_next (70)
    on left: 36 37, on right: 38
relation_and_expr (71)
    on left: 38, on right: 37 41
bool_expr_next (72)
    on left: 39 40, on right: 41
bool_expr (73)
    on left: 41, on right: 20 21 22 23 40
comp (74)
    on left: 42 43 44 45 46 47, on right: 33
multiplicative_expr (75)
    on left: 48 49 50 51, on right: 49 50 51 52 53 54
expression (76)
    on left: 52 53 54, on right: 19 28 33 53 54 55 56 59 61 64
expressions (77)
    on left: 55 56, on right: 56 62
term (78)
    on left: 57 58 59 60 61 62, on right: 48 49 50 51
var (79)
    on left: 63 64, on right: 15 16 19 57


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    funchead   go to state 4
    function   go to state 5


State 1

    4 funchead: FUNCTION . ident SEMICOLON

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    7 function: funchead . params_start declarations params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9

    params_start  go to state 10


State 5

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 11
    funchead   go to state 4
    function   go to state 5


State 6

    8 ident: IDENT .

    $default  reduce using rule 8 (ident)


State 7

    4 funchead: FUNCTION ident . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 8

    0 $accept: program $end .

    $default  accept


State 9

    6 params_start: BEGIN_PARAMS .

    $default  reduce using rule 6 (params_start)


State 10

    7 function: funchead params_start . declarations params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 13 (declarations)

    ident         go to state 13
    identifiers   go to state 14
    declaration   go to state 15
    declarations  go to state 16


State 11

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 12

    4 funchead: FUNCTION ident SEMICOLON .

    $default  reduce using rule 4 (funchead)


State 13

    9 identifiers: ident .
   10            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 9 (identifiers)


State 14

   11 declaration: identifiers . COLON INTEGER
   12            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

   14 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 16

    7 function: funchead params_start declarations . params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 20

    params_end  go to state 21


State 17

   10 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 6

    ident        go to state 13
    identifiers  go to state 22


State 18

   11 declaration: identifiers COLON . INTEGER
   12            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 19

   14 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 6

    $default  reduce using rule 13 (declarations)

    ident         go to state 13
    identifiers   go to state 14
    declaration   go to state 15
    declarations  go to state 25


State 20

    5 params_end: END_PARAMS .

    $default  reduce using rule 5 (params_end)


State 21

    7 function: funchead params_start declarations params_end . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 22

   10 identifiers: ident COMMA identifiers .

    $default  reduce using rule 10 (identifiers)


State 23

   11 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 24

   12 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   14 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 14 (declarations)


State 26

    7 function: funchead params_start declarations params_end BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6

    $default  reduce using rule 13 (declarations)

    ident         go to state 13
    identifiers   go to state 14
    declaration   go to state 15
    declarations  go to state 28


State 27

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    7 function: funchead params_start declarations params_end BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    7 function: funchead params_start declarations params_end BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 32


State 31

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 33


State 32

    7 function: funchead params_start declarations params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 43
    statement   go to state 44
    var         go to state 45


State 33

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 46


State 34

   20 statement: IF . bool_expr THEN statements ELSE statements ENDIF
   21          | IF . bool_expr THEN statements ENDIF

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    ident                go to state 53
    relation_expr        go to state 54
    relation_expr_param  go to state 55
    relation_expr_not    go to state 56
    relation_and_expr    go to state 57
    bool_expr            go to state 58
    multiplicative_expr  go to state 59
    expression           go to state 60
    term                 go to state 61
    var                  go to state 62


State 35

   22 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    ident                go to state 53
    relation_expr        go to state 54
    relation_expr_param  go to state 55
    relation_expr_not    go to state 56
    relation_and_expr    go to state 57
    bool_expr            go to state 63
    multiplicative_expr  go to state 59
    expression           go to state 60
    term                 go to state 61
    var                  go to state 62


State 36

   23 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 64


State 37

   24 statement: FOREACH . ident IN ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 65


State 38

   27 statement: CONTINUE .

    $default  reduce using rule 27 (statement)


State 39

   25 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 42
    vars   go to state 66
    var    go to state 67


State 40

   26 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 42
    vars   go to state 68
    var    go to state 67


State 41

   28 statement: RETURN . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 70
    term                 go to state 61
    var                  go to state 62


State 42

   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 63 (var)


State 43

    7 function: funchead params_start declarations params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 44

   18 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 45

   19 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 46

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 47

   58 term: NUMBER .

    $default  reduce using rule 58 (term)


State 48

   34 relation_expr_not: TRUE .

    $default  reduce using rule 34 (relation_expr_not)


State 49

   35 relation_expr_not: FALSE .

    $default  reduce using rule 35 (relation_expr_not)


State 50

   32 relation_expr_param: L_PAREN . relation_expr_not R_PAREN
   59 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    relation_expr_not    go to state 75
    multiplicative_expr  go to state 59
    expression           go to state 76
    term                 go to state 61
    var                  go to state 62


State 51

   60 term: SUB . NUMBER
   61     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 77
    L_PAREN  shift, and go to state 78


State 52

   30 relation_expr: NOT . relation_expr_param

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51

    ident                go to state 53
    relation_expr_param  go to state 79
    relation_expr_not    go to state 56
    multiplicative_expr  go to state 59
    expression           go to state 60
    term                 go to state 61
    var                  go to state 62


State 53

   62 term: ident . L_PAREN expressions R_PAREN
   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 63 (var)


State 54

   38 relation_and_expr: relation_expr . relation_and_expr_next

    AND  shift, and go to state 81

    $default  reduce using rule 36 (relation_and_expr_next)

    relation_and_expr_next  go to state 82


State 55

   29 relation_expr: relation_expr_param .

    $default  reduce using rule 29 (relation_expr)


State 56

   31 relation_expr_param: relation_expr_not .

    $default  reduce using rule 31 (relation_expr_param)


State 57

   41 bool_expr: relation_and_expr . bool_expr_next

    OR  shift, and go to state 83

    $default  reduce using rule 39 (bool_expr_next)

    bool_expr_next  go to state 84


State 58

   20 statement: IF bool_expr . THEN statements ELSE statements ENDIF
   21          | IF bool_expr . THEN statements ENDIF

    THEN  shift, and go to state 85


State 59

   52 expression: multiplicative_expr .
   53           | multiplicative_expr . ADD expression
   54           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 86
    ADD  shift, and go to state 87

    $default  reduce using rule 52 (expression)


State 60

   33 relation_expr_not: expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 94


State 61

   48 multiplicative_expr: term .
   49                    | term . MULT multiplicative_expr
   50                    | term . DIV multiplicative_expr
   51                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 48 (multiplicative_expr)


State 62

   57 term: var .

    $default  reduce using rule 57 (term)


State 63

   22 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 64

   23 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 99
    statement   go to state 44
    var         go to state 45


State 65

   24 statement: FOREACH ident . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 100


State 66

   25 statement: READ vars .

    $default  reduce using rule 25 (statement)


State 67

   15 vars: var .
   16     | var . COMMA vars

    COMMA  shift, and go to state 101

    $default  reduce using rule 15 (vars)


State 68

   26 statement: WRITE vars .

    $default  reduce using rule 26 (statement)


State 69

   59 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 102
    term                 go to state 61
    var                  go to state 62


State 70

   28 statement: RETURN expression .

    $default  reduce using rule 28 (statement)


State 71

   64 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 103
    term                 go to state 61
    var                  go to state 62


State 72

    7 function: funchead params_start declarations params_end BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 7 (function)


State 73

   18 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 104
    statement   go to state 44
    var         go to state 45


State 74

   19 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 105
    term                 go to state 61
    var                  go to state 62


State 75

   32 relation_expr_param: L_PAREN relation_expr_not . R_PAREN

    R_PAREN  shift, and go to state 106


State 76

   33 relation_expr_not: expression . comp expression
   59 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107
    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    LTE      shift, and go to state 92
    GTE      shift, and go to state 93

    comp  go to state 94


State 77

   60 term: SUB NUMBER .

    $default  reduce using rule 60 (term)


State 78

   61 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 108
    term                 go to state 61
    var                  go to state 62


State 79

   30 relation_expr: NOT relation_expr_param .

    $default  reduce using rule 30 (relation_expr)


State 80

   62 term: ident L_PAREN . expressions R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 109
    expressions          go to state 110
    term                 go to state 61
    var                  go to state 62


State 81

   37 relation_and_expr_next: AND . relation_and_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    ident                go to state 53
    relation_expr        go to state 54
    relation_expr_param  go to state 55
    relation_expr_not    go to state 56
    relation_and_expr    go to state 111
    multiplicative_expr  go to state 59
    expression           go to state 60
    term                 go to state 61
    var                  go to state 62


State 82

   38 relation_and_expr: relation_expr relation_and_expr_next .

    $default  reduce using rule 38 (relation_and_expr)


State 83

   40 bool_expr_next: OR . bool_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    ident                go to state 53
    relation_expr        go to state 54
    relation_expr_param  go to state 55
    relation_expr_not    go to state 56
    relation_and_expr    go to state 57
    bool_expr            go to state 112
    multiplicative_expr  go to state 59
    expression           go to state 60
    term                 go to state 61
    var                  go to state 62


State 84

   41 bool_expr: relation_and_expr bool_expr_next .

    $default  reduce using rule 41 (bool_expr)


State 85

   20 statement: IF bool_expr THEN . statements ELSE statements ENDIF
   21          | IF bool_expr THEN . statements ENDIF

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 113
    statement   go to state 44
    var         go to state 45


State 86

   54 expression: multiplicative_expr SUB . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 114
    term                 go to state 61
    var                  go to state 62


State 87

   53 expression: multiplicative_expr ADD . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 115
    term                 go to state 61
    var                  go to state 62


State 88

   42 comp: EQ .

    $default  reduce using rule 42 (comp)


State 89

   43 comp: NEQ .

    $default  reduce using rule 43 (comp)


State 90

   44 comp: LT .

    $default  reduce using rule 44 (comp)


State 91

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 92

   46 comp: LTE .

    $default  reduce using rule 46 (comp)


State 93

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 94

   33 relation_expr_not: expression comp . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 116
    term                 go to state 61
    var                  go to state 62


State 95

   49 multiplicative_expr: term MULT . multiplicative_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 117
    term                 go to state 61
    var                  go to state 62


State 96

   50 multiplicative_expr: term DIV . multiplicative_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 118
    term                 go to state 61
    var                  go to state 62


State 97

   51 multiplicative_expr: term MOD . multiplicative_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 119
    term                 go to state 61
    var                  go to state 62


State 98

   22 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 120
    statement   go to state 44
    var         go to state 45


State 99

   23 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 121


State 100

   24 statement: FOREACH ident IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 6

    ident  go to state 122


State 101

   16 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 42
    vars   go to state 123
    var    go to state 67


State 102

   59 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 103

   64 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 104

   18 statements: statement SEMICOLON statements .

    $default  reduce using rule 18 (statements)


State 105

   19 statement: var ASSIGN expression .

    $default  reduce using rule 19 (statement)


State 106

   32 relation_expr_param: L_PAREN relation_expr_not R_PAREN .

    $default  reduce using rule 32 (relation_expr_param)


State 107

   59 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 108

   61 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 125


State 109

   55 expressions: expression .
   56            | expression . COMMA expressions

    COMMA  shift, and go to state 126

    $default  reduce using rule 55 (expressions)


State 110

   62 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 111

   37 relation_and_expr_next: AND relation_and_expr .

    $default  reduce using rule 37 (relation_and_expr_next)


State 112

   40 bool_expr_next: OR bool_expr .

    $default  reduce using rule 40 (bool_expr_next)


State 113

   20 statement: IF bool_expr THEN statements . ELSE statements ENDIF
   21          | IF bool_expr THEN statements . ENDIF

    ENDIF  shift, and go to state 128
    ELSE   shift, and go to state 129


State 114

   54 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 54 (expression)


State 115

   53 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 53 (expression)


State 116

   33 relation_expr_not: expression comp expression .

    $default  reduce using rule 33 (relation_expr_not)


State 117

   49 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 49 (multiplicative_expr)


State 118

   50 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 50 (multiplicative_expr)


State 119

   51 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 51 (multiplicative_expr)


State 120

   22 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 121

   23 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 131


State 122

   24 statement: FOREACH ident IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 132


State 123

   16 vars: var COMMA vars .

    $default  reduce using rule 16 (vars)


State 124

   64 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 125

   61 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (term)


State 126

   56 expressions: expression COMMA . expressions

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    L_PAREN  shift, and go to state 69
    SUB      shift, and go to state 51

    ident                go to state 53
    multiplicative_expr  go to state 59
    expression           go to state 109
    expressions          go to state 133
    term                 go to state 61
    var                  go to state 62


State 127

   62 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 62 (term)


State 128

   21 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 21 (statement)


State 129

   20 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 134
    statement   go to state 44
    var         go to state 45


State 130

   22 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (statement)


State 131

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 6
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    L_PAREN  shift, and go to state 50
    SUB      shift, and go to state 51
    NOT      shift, and go to state 52

    ident                go to state 53
    relation_expr        go to state 54
    relation_expr_param  go to state 55
    relation_expr_not    go to state 56
    relation_and_expr    go to state 57
    bool_expr            go to state 135
    multiplicative_expr  go to state 59
    expression           go to state 60
    term                 go to state 61
    var                  go to state 62


State 132

   24 statement: FOREACH ident IN ident BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 6
    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOREACH   shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41

    $default  reduce using rule 17 (statements)

    ident       go to state 42
    statements  go to state 136
    statement   go to state 44
    var         go to state 45


State 133

   56 expressions: expression COMMA expressions .

    $default  reduce using rule 56 (expressions)


State 134

   20 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 137


State 135

   23 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 23 (statement)


State 136

   24 statement: FOREACH ident IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 138


State 137

   20 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 20 (statement)


State 138

   24 statement: FOREACH ident IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 24 (statement)
